'easyFLAC EXAMPLE for ActiveBasic4

#console
#include<RGBALib.sbp>

Declare Function FLAC_openFile 		Lib "easyFLAC"  (pszPath As WordPtr) As EASYFLAC_HANDLE
Declare Sub		 FLAC_close			Lib "easyFLAC"  (handle As EASYFLAC_HANDLE)
Declare Function FLAC_getFileInfo	Lib "easyFLAC"  (handle As EASYFLAC_HANDLE, info As *EASYFLAC_FILE_INFO) As HANDLE
Declare Function FLAC_render		Lib "easyFLAC"  (handle As EASYFLAC_HANDLE, buf AS BytePtr, samples As DWord, used_length As *DWord) As Long

Declare Sub		 FLAC_seek		Lib "easyFLAC"  (handle As EASYFLAC_HANDLE, posSample AS QWord)
Declare Sub		 FLAC_tell		Lib "easyFLAC"  (handle As EASYFLAC_HANDLE, posSample AS *QWord)

Declare Function FLAC_getVorbisCommentFromHandle   Lib "easyFLAC"  (handle As EASYFLAC_HANDLE) As HANDLE
Declare Function FLAC_findComment   Lib "easyFLAC"  (tags As HANDLE, pszPath As BytePtr) As HANDLE
Declare Function FLAC_makeInfomationString Lib "easyFLAC"  (handle As EASYFLAC_HANDLE) As BytePtr
Declare Sub		 FLAC_freeInfomationString Lib "easyFLAC"  (infoText AS BytePtr)

Type EASYFLAC_FILE_INFO
	sampleRate 	AS DWord
	channels 	AS DWord
	bps 		AS DWord
	sampleSize 	AS DWord
	totalSamples AS QWord
End Type
typedef EASYFLAC_HANDLE = VoidPtr 

Enum FLAC__StreamDecoderState
	FLAC__STREAM_DECODER_SEARCH_FOR_METADATA = 0
	FLAC__STREAM_DECODER_READ_METADATA
	FLAC__STREAM_DECODER_SEARCH_FOR_FRAME_SYNC
	FLAC__STREAM_DECODER_READ_FRAME
	FLAC__STREAM_DECODER_END_OF_STREAM
	FLAC__STREAM_DECODER_OGG_ERROR
	FLAC__STREAM_DECODER_SEEK_ERROR
	FLAC__STREAM_DECODER_ABORTED
	FLAC__STREAM_DECODER_MEMORY_ALLOCATION_ERROR
	FLAC__STREAM_DECODER_UNINITIALIZED
End Enum

' === Program start ===
printf(ex"easyFLAC example for ActiveBasic - PROGRAMMED BY RGBA_CRT, v2019.4.24\n")

' Open File
Dim handle AS EASYFLAC_HANDLE
Const FILE=ex"8\0b\0i\0t\0.\0f\0l\0a\0c\0\0\0" ' UTF16-text

handle = FLAC_openFile(FILE)
if handle = NULL Then	Print "open error":Goto *EFE_EXIT
 
' Get audio file info
Dim info As EASYFLAC_FILE_INFO
FLAC_getFileInfo(handle, VarPtr(info))

printf(ex"%dHz , %dbit , %dch\n",
	info.sampleRate,info.bps,info.channels)

Dim info_text_utf8 AS BytePtr
Dim info_text AS BytePtr
info_text_utf8 = FLAC_makeInfomationString(handle)
info_text = UTF8ToSJIS(info_text_utf8)

printf(ex"------- INFO -----------\n%s\n",info_text)

free(info_text): info_text=NULL
FLAC_freeInfomationString(info_text_utf8): info_text=NULL

'Get vorbis comment
Dim tags AS HANDLE
tags=FLAC_getVorbisCommentFromHandle(handle)

Const VorbisComment_Name = "TITLE"
Dim comment_utf8 AS BytePtr
comment_utf8 = FLAC_findComment(tags,VorbisComment_Name)
if comment_utf8 Then
	Dim comment AS BytePtr
	comment = UTF8ToSJIS( comment_utf8 )
	printf(ex"%s = %s\n\n", VorbisComment_Name, comment)
End If

'DECODE
Const SAMPLE_SIZE = 40000
Dim out AS File
Dim decoded_samples AS DWord
Dim buf AS BytePtr
Dim render_ret As Long
buf=calloc(SAMPLE_SIZE * info.sampleSize)

Input "[PRESS ENTER]",decoded_samples

out.openFile("out.rwav",GENERIC_WRITE)
Do
	render_ret = FLAC_render(handle,buf,SAMPLE_SIZE, VarPtr(decoded_samples))
	out.write(buf,decoded_samples * info.sampleSize)
	if render_ret = FLAC__STREAM_DECODER_END_OF_STREAM Then ExitDo
	Print ".";
Loop
out.close()
FLAC_close(handle)

Print ex"\nDone."

*EFE_EXIT
Input "[PRESS ENTER]", decoded_samples
End
